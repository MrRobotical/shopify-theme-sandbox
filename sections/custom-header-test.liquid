


<link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400&display=swap" rel="stylesheet">
<link rel="stylesheet" href="{{ 'component-list-menu.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-search.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-menu-drawer.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-cart-notification.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-cart-items.css' | asset_url }}" media="print" onload="this.media='all'">
{% if settings.predictive_search_enabled %}
  <link rel="stylesheet" href="{{ 'component-price.css' | asset_url }}" media="print" onload="this.media='all'">
{% endif %}
{% if section.settings.menu_type_desktop == 'mega' %}
  <link rel="stylesheet" href="{{ 'component-mega-menu.css' | asset_url }}" media="print" onload="this.media='all'">
{% endif %}
{% if settings.cart_type == "drawer" %}
  {{ 'component-cart-drawer.css' | asset_url | stylesheet_tag }}
  {{ 'component-cart.css' | asset_url | stylesheet_tag }}
  {{ 'component-totals.css' | asset_url | stylesheet_tag }}
  {{ 'component-price.css' | asset_url | stylesheet_tag }}
  {{ 'component-discounts.css' | asset_url | stylesheet_tag }}
{% endif %}

<style>
  cart-drawer.drawer {
    display: none;
  }

  @font-face {
    font-family: CustomThin;
    src: url('https://cdn.shopify.com/s/files/1/0704/7482/5964/files/LEMONMILK-Regular.woff2?v=1715786814');
  }

  .custom-header-{{ section.id }} {
    background: #333;
    padding: 10px 40px;
    max-width: 100%;
    z-index: 1000;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
    color: white;
    font-family: CustomThin, sans-serif;
  }

  .sticky-header-{{ section.id }} {
    position: sticky;
    top: 0;
  }

  .header-container-{{ section.id }} {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 20px;
  }

  .logo-{{ section.id }} img {
    max-height: 70px;
  }

  .search-container-{{ section.id }} {
    flex: 1;
    display: flex;
    align-items: center;
  }

  .search-container-{{ section.id }} form {
    width: 100%;
    display: flex;
  }

  .search-container-{{ section.id }} input[type="text"] {
    width: 100%;
    padding: 10px;
    border: none;
    border-radius: 5px;
    font-family: CustomThin, sans-serif;
  }

  .icons-{{ section.id }} {
    display: flex;
    gap: 20px;
  }

  .icons-{{ section.id }} a {
    width: 24px;
    height: 24px;
    color: white;
    text-decoration: none;
  }

  .icons-{{ section.id }} a svg {
    width: 100%;
    height: 100%;
    fill: white !important; /* Override inline styles */
  }

  .nav-menu-{{ section.id }} {
    display: flex;
    justify-content: space-between;
    margin-top: 10px;
  }

  .menu-{{ section.id }} {
    list-style: none;
    display: flex;
    margin: 0;
    margin-bottom: 18px;
    padding: 0;
    width: 100%;
    justify-content: space-between;
  }

  .menu-item-{{ section.id }} {
    position: relative;
  }

  .menu-item-{{ section.id }} a {
    text-decoration: none;
    color: white;
    padding: 10px;
    font-family: CustomThin, sans-serif;
  }

  .menu-item-{{ section.id }} a:hover {
    color: #FF8B6E;
  }

  .menu-item-{{ section.id }}:hover > .dropdown-menu-{{ section.id }} {
    display: grid;
  }

  .dropdown-menu-{{ section.id }} {
    display: none;
    position: absolute;
    top: 100%;
    left: 0;
    background: #333;
    padding: 20px;
    width: 95vw;
    z-index: 1000;
    grid-template-columns: repeat(6, 1fr);
    gap: 20px;
    justify-content: center; /* Center the grid */
    margin: 0 auto;
  }

  .dropdown-column-{{ section.id }} {
    display: flex;
    flex-direction: column;
    padding-bottom: 4px;

  }

  .dropdown-column-{{ section.id }} > a {
    text-decoration: none;
    color: white;
    padding: 5px 0;
    font-family: CustomThin, sans-serif;
  }

  .menu-item-{{ section.id }} a.second-level {
  margin-right: 6rem;
  border-bottom: 2px solid white;
  
}

  .dropdown-column-{{ section.id }} > a.level-3 {
    font-size: 0.875em;
    font-family: 'Roboto', sans-serif !important;
  }

  .dropdown-column-{{ section.id }}.image-column {
    grid-column: span 2; /* Span two columns */
    background-image: url('{{ section.settings.image | img_url: '600x400' }}');
    background-size: cover;
    background-position: center;
  }

  .mobile-menu {
    display: none;
  }

  .menu-item-mobile {
    position: relative;
  }

  .menu-item-mobile > a {
    display: flex;
    justify-content: space-between;
    align-items: center;
    text-decoration: none;
    color: #FF8B6E;
    padding: 10px;
    font-family: CustomThin, sans-serif;
  }

  .menu-item-mobile > a::after {
    content: 'â–¼';
    font-size: 0.75em;
    margin-left: 10px;
  }

  .menu-item-mobile > .sub-menu {
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.3s ease-out;
    padding-left: 20px;
  }

  .menu-item-mobile.expanded > .sub-menu {
    max-height: 1000px; /* Adjust this value as needed */
  }

  /* Mobile Menu Styles */
  @media (max-width: 900px) {
    .search-container-{{ section.id }},
    .nav-menu-{{ section.id }} {
      display: none;
    }

    .header-container-{{ section.id }} {
      display: grid;
      grid-template-columns: auto 1fr auto;
      align-items: center;
    }

    .logo-{{ section.id }} {
      display: flex;
      justify-content: center;
      grid-column: 2;
    }

    .icons-{{ section.id }} {
      display: flex;
      gap: 20px;
      grid-column: 3;
      justify-content: flex-end;
    }

    .hamburger-menu {
      display: flex;
      flex-direction: column;
      gap: 5px;
      cursor: pointer;
      grid-column: 1;
    }

    .hamburger-menu svg {
      width: 24px;
      height: 24px;
      fill: white;
    }

    .mobile-menu-overlay {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0, 0, 0, 0.8);
      z-index: 2000;
    }

    .mobile-menu {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 50%;
      height: 100%;
      background-color: #333;
      z-index: 3000;
      flex-direction: column;
      align-items: flex-start;
      padding: 20px;
      transition: transform 0.3s ease-in-out;
    }

    .mobile-menu.active {
      display: flex;
      transform: translateX(0);
    }

    .mobile-menu .close-btn {
      align-self: flex-end;
      font-size: 24px;
      color: white;
      cursor: pointer;
    }

    .mobile-menu ul {
      list-style: none;
      padding: 0;
    }

    .mobile-menu ul li .second-level {
      margin-top: 20px;
    }

    .mobile-menu ul li a {
      color: white;
      font-size: 18px;
      text-decoration: none;

    }

    .sub-menu a.level-3 {
      font-family: 'Roboto', sans-serif !important;
      margin-bottom: 0;
      padding-bottom: 0;
    }
  }
</style>

<div class="custom-header-{{ section.id }}{% if section.settings.sticky_header %} sticky-header-{{ section.id }}{% endif %}">
  <div class="header-container-{{ section.id }}">
    <div class="hamburger-menu" onclick="toggleMobileMenu()">
      {% render 'icon-hamburger' %}
    </div>
    {% if section.settings.logo != blank %}
      <div class="logo-{{ section.id }}">
        <a href="{{ shop.url }}">
          <img src="{{ section.settings.logo | img_url: '200x' }}" alt="{{ shop.name }}">
        </a>
      </div>
    {% endif %}
    <div class="search-container-{{ section.id }}">
      <form action="/search" method="get">
        <input type="text" name="q" placeholder="Find your products here">
      </form>
    </div>
    <div class="icons-{{ section.id }}">
      <!-- Language Icon -->
      <a href="#">{% render 'icon-info' %}</a>
      <!-- Login Icon -->
      <a href="/account">{% render 'icon-account' %}</a>
      <!-- Cart Icon -->
      <a href="/cart" class="cart-icon-svg">
        <img src="{{ 'shopping-cart.png' | asset_url }}" alt="Cart Icon" class="cart-icon-svg" style="width: 25px; filter: invert(1);">
      </a>
    </div>
  </div>
  <nav class="nav-menu-{{ section.id }}">
    {% assign menu_handle = section.settings.menu %}
    {% if menu_handle %}
      <ul class="menu-{{ section.id }}">
        {% for link in linklists[menu_handle].links %}
          <li class="menu-item-{{ section.id }}">
            <a href="{{ link.url }}">{{ link.title }}</a>
            {% if link.links.size > 0 %}
              <div class="dropdown-menu-{{ section.id }}">
                {% assign column = 0 %}
                {% for sublink in link.links %}
                  <div class="dropdown-column-{{ section.id }}">
                    <a href="{{ sublink.url }}" class="second-level">{{ sublink.title }}</a>
                    {% if sublink.links.size > 0 %}
                      {% for sub_sublink in sublink.links %}
                        <a href="{{ sub_sublink.url }}" class="level-3">{{ sub_sublink.title }}</a>
                      {% endfor %}
                    {% endif %}
                  </div>
                  {% assign column = column | plus: 1 %}
                {% endfor %}
                {% for i in (column..3) %}
                  <div class="dropdown-column-{{ section.id }}"></div>
                {% endfor %}
                <div class="dropdown-column-{{ section.id }} image-column">
                  <!-- Placeholder for image column -->
                </div>
              </div>
            {% endif %}
          </li>
        {% endfor %}
      </ul>
    {% else %}
      <p>No menu selected</p>
    {% endif %}
  </nav>
</div>

<div class="mobile-menu-overlay" onclick="toggleMobileMenu()"></div>
<div class="mobile-menu" id="mobileMenu">
  <span class="close-btn" onclick="toggleMobileMenu()">&times;</span>
  <ul>
    {% for link in linklists[menu_handle].links %}
      <li class="menu-item-mobile">
        <a href="{{ link.url }}">{{ link.title }}</a>
        {% if link.links.size > 0 %}
          <ul class="sub-menu">
            {% for sublink in link.links %}
              <li>
                <a href="{{ sublink.url }}">{{ sublink.title }}</a>
                {% if sublink.links.size > 0 %}
                  <ul class="sub-menu">
                    {% for sub_sublink in sublink.links %}
                      <li><a href="{{ sub_sublink.url }}" class="level-3">{{ sub_sublink.title }}</a></li>
                    {% endfor %}
                  </ul>
                {% endif %}
              </li>
            {% endfor %}
          </ul>
        {% endif %}
      </li>
    {% endfor %}
  </ul>
</div>

{% schema %}
{
  "name": "Mega Menu Custom Header",
  "settings": [
    {
      "type": "image_picker",
      "id": "logo",
      "label": "Logo"
    },
    {
      "type": "checkbox",
      "id": "sticky_header",
      "label": "Enable Sticky Header",
      "default": true
    },
    {
      "type": "link_list",
      "id": "menu",
      "label": "Select menu"
    },
    {
      "type": "image_picker",
      "id": "image",
      "label": "Dropdown Image"
    }
  ],
  "presets": [
    {
      "name": "Mega Menu Custom Header",
      "category": "Header"
    }
  ]
}
{% endschema %}

<script src="{{ 'details-disclosure.js' | asset_url }}" defer="defer"></script>
<script src="{{ 'details-modal.js' | asset_url }}" defer="defer"></script>
<script src="{{ 'cart-notification.js' | asset_url }}" defer="defer"></script>
<script src="{{ 'search-form.js' | asset_url }}" defer="defer"></script>
{% if settings.cart_type == "drawer" %}
  <script src="{{ 'cart-drawer.js' | asset_url }}" defer="defer"></script>
{% endif %}

<script>
  function toggleMobileMenu() {
    const mobileMenu = document.getElementById('mobileMenu');
    const overlay = document.querySelector('.mobile-menu-overlay');
    mobileMenu.classList.toggle('active');
    overlay.style.display = overlay.style.display === 'block' ? 'none' : 'block';
  }

  document.addEventListener('DOMContentLoaded', function() {
    document.querySelectorAll('.add-to-cart-button').forEach(button => {
      button.addEventListener('click', function(event) {
        event.preventDefault();
        const productId = this.dataset.productId;
        fetch(`/cart/add.js?id=${productId}`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            quantity: 1,
            id: productId
          }),
        })
        .then(response => response.json())
        .then(data => {
          // Handle the response data (e.g., update cart icon, show confirmation)
          console.log('Product added:', data);
          openCartDrawer(); // Trigger the cart drawer to open
        })
        .catch(error => console.error('Error:', error));
      });
    });

    document.querySelectorAll('.menu-item-mobile > a').forEach(item => {
      item.addEventListener('click', function(event) {
        event.preventDefault();
        const parent = this.parentNode;
        parent.classList.toggle('expanded');
      });
    });
  });

  function openCartDrawer() {
    const cartDrawer = document.querySelector('cart-drawer');
    if (cartDrawer) {
      cartDrawer.open();
    }
  }
</script>
